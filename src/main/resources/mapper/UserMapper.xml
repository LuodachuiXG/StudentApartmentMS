<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.studentapartmentms.mapper.UserMapper">
    <!-- 获取所有用户 -->
    <select id="allUser" resultType="User">
        SELECT userId,
               name,
               id,
               role,
               phone,
               gender,
               birth,
               lastLogin
        FROM user
    </select>

    <!-- 根据用户 ID 获取用户 -->
    <select id="userByUserId" resultType="User">
        SELECT *
        FROM user
        WHERE userId = #{userId}
    </select>

    <!-- 根据 ID 获取用户 -->
    <select id="userById" resultType="User">
        SELECT *
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 根据身份获取用户 -->
    <select id="userByRole" resultType="User">
        SELECT *
        FROM user
        WHERE role = #{role}
    </select>

    <!-- 根据关键字获取用户，关键字来自：工号（学号）、姓名、电话 -->
    <select id="userByKey" resultType="User">
        SELECT *
        FROM user
        WHERE id LIKE '%${key}%'
           OR name LIKE '%${key}%'
           OR phone LIKE '%${key}%'
    </select>

    <!-- 获取所有学生用户（只有 userId、id、name 三个字段） -->
    <select id="studentIdAndNameByKey" resultType="User">
        SELECT userId, id, name
        FROM user
        WHERE (id LIKE '%${key}%'
            OR name LIKE '%${key}%'
            OR phone LIKE '%${key}%')
          AND role = 'STUDENT'
    </select>


    <!-- 添加用户 -->
    <insert id="addUser" useGeneratedKeys="true">
        insert into user (name, id, password, role, phone, gender, birth)
        values (#{user.name}, #{user.id}, #{user.password},
                #{user.role}, #{user.phone}, #{user.gender},
                #{user.birth})
    </insert>

    <!-- 修改用户最后登录时间 -->
    <update id="updateLastLogin">
        UPDATE user
        SET lastLogin = #{time}
        WHERE userId = #{userId}
    </update>

    <!-- 修改用户 -->
    <update id="updateUser">
        UPDATE user
        SET name  = #{user.name},
            id    = #{user.id},
            phone = #{user.phone},
            gender = #{user.gender},
            birth = #{user.birth}
        WHERE userId = #{user.userId}
    </update>

    <!-- 修改用户密码 -->
    <update id="updateUserPassword">
        UPDATE user
        SET password = #{password}
        WHERE userId = #{userId}
    </update>

    <delete id="deleteByUserIds">
        DELETE
        FROM user
        WHERE userId IN
        <foreach collection="userIds" item="userId" index="index" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>